// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests the mounted Footer component tests the footer of the app against the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Content />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <div
          className="form-group"
        >
          <input
            className="form-control"
            placeholder="Enter email"
            type="email"
          />
        </div>
        <div
          className="form-group"
        >
          <input
            className="form-control"
            placeholder="Enter Password"
            type="password"
          />
        </div>
        <button
          className="btn btn-primary"
          type="submit"
        >
          Login
        </button>
      </form>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form-group"
          >
            <input
              className="form-control"
              placeholder="Enter email"
              type="email"
            />
          </div>,
          <div
            className="form-group"
          >
            <input
              className="form-control"
              placeholder="Enter Password"
              type="password"
            />
          </div>,
          <button
            className="btn btn-primary"
            type="submit"
          >
            Login
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control"
              placeholder="Enter email"
              type="email"
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "placeholder": "Enter email",
              "type": "email",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control"
              placeholder="Enter Password"
              type="password"
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "placeholder": "Enter Password",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login",
            "className": "btn btn-primary",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Login",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <div
            className="form-group"
          >
            <input
              className="form-control"
              placeholder="Enter email"
              type="email"
            />
          </div>
          <div
            className="form-group"
          >
            <input
              className="form-control"
              placeholder="Enter Password"
              type="password"
            />
          </div>
          <button
            className="btn btn-primary"
            type="submit"
          >
            Login
          </button>
        </form>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form-group"
            >
              <input
                className="form-control"
                placeholder="Enter email"
                type="email"
              />
            </div>,
            <div
              className="form-group"
            >
              <input
                className="form-control"
                placeholder="Enter Password"
                type="password"
              />
            </div>,
            <button
              className="btn btn-primary"
              type="submit"
            >
              Login
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                placeholder="Enter email"
                type="email"
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "placeholder": "Enter email",
                "type": "email",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                placeholder="Enter Password"
                type="password"
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "placeholder": "Enter Password",
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "btn btn-primary",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
